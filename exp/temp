    // g.add_vertex(10);
    // g.add_vertex(20);
    // g.add_vertex(30);
    // g.add_vertex(40);
    // g.add_vertex(50);
    // g.pL();

    // g.del_vertex(30);
    // g.pL();

    // g.add_edge(10, 20);
    // g.add_edge(20, 40);
    // g.add_edge(10, 40);
    // g.add_edge(10,100);
    // g.pL();
    // g.del_edge(10,40);
    // g.del_edge(10,10);
    // g.pL();
    // g.pM();

    // g.add_vertex(0);
    // g.add_vertex(1);
    // g.add_vertex(2);
    // g.add_vertex(3);
    // g.add_vertex(4);

    // g.add_edge(0, 1);
    // g.add_edge(0, 2);
    // g.add_edge(1, 2);
    // g.add_edge(2, 0);
    // g.add_edge(2, 3);
    // g.add_edge(3, 3);





    // Fixed remove and add vertex


        srand(0);
    Graph<int,float> g(true);
    g.add_edge(0, 1, 1);
    g.add_edge(0, 2, 2);
    g.add_edge(0, 5, 3);
    g.add_edge(1, 3, 4);
    g.add_edge(1, 2, 5);
    g.add_edge(2, 3, 6);
    g.add_edge(2, 4, 7);
    g.add_edge(3, 4, 8);
    g.add_edge(5, 4, 9);

    g.pM();
    cout << endl;
    // g.pL();
    g.del_vertex(3);
    
    
    // g.pV();
    cout << endl;
    g.pM();
    cout << endl;
    // g.pL();
    // g.pV();
    // cout << endl;

    
    g.add_vertex(3);

    // g.pL();

    g.pM();
    // cout << endl;
    // // g.pM();